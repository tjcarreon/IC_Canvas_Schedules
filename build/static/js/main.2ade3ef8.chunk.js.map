{"version":3,"sources":["Task.js","Hour.js","Day.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","checkForAlarm","active","alarmOn","d","Date","getHours","state","hour","getMinutes","minute","setState","ringing","taskDetails","push","key","className","this","task","i","length","clause","includes","link","split","target","href","resultHtml","clearInterval","alarmId","str","sum","charCodeAt","Math","pow","colors","getColorfromString","abs","parseFloat","targetHour","parseInt","targetMinute","style","backgroundColor","color","oppGetColorfromString","reverse","join","constructTask","Component","Hour","class","Tasks","times","tasks","timeArr","trim","time","minIndex","getMinIndex","arr","result","getClassName","constructHours","Day","updateHours","boolTable","hourTasks","setInterval","newHourTasks","e","console","log","tags","title","App","parseTextFileAndUpdate","text","x","trimedStr","taskList","updateTasks","dayName2Int","Map","set","daysArray","line","taskDetail","forEach","item","timeDetail","timeOfDay","splice","dayName","has","dayTask","get","allTasks","UpdateDay","day","getDay","vars","getUrlVars","fetch","then","response","catch","err","window","location","replace","m","value","id","constructDays","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2ade3ef8.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import Alarm from './Alarm';\n\n// props:\n//\t\ttask: []\n//\t\t\telement:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\n//\t\tactive: boolean\n\nclass Task extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tringing: false\n\t\t}\n\t}\n\n\n\tconstructTask() {\n\t\t// console.log(this.props.task);\n\n\t\tlet taskDetails = [];\n\t\ttaskDetails.push(\n\t\t\t<div key={0} className=\"t_time\">{this.props.task[1]}</div>\n\t\t);\n\t\tfor (let i = 2; i < this.props.task.length; i++) {\n\t\t\tlet clause = this.props.task[i];\n\t\t\tif (clause.includes(\"->\")) {\n\t\t\t\tlet link = clause.split(\"->\");\n\t\t\t\ttaskDetails.push(\n\t\t\t\t\t<a key={i} target=\"blank\" href={link[1]}>{link[0]}</a>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttaskDetails.push(\n\t\t\t\t\t<div key={i} className=\"t_note\">{clause}</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet resultHtml = [];\n\t\tresultHtml.push(\n\t\t\t<div key={1234} className=\"t_title\">{this.props.task[0]}</div>\n\t\t);\n\t\tresultHtml.push(\n\t\t\t\t<div key={1235} className=\"t_detail\">\n\t\t\t\t\t{taskDetails}\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t// alarm ringing: give a button to stop it\n\t\tif (this.state.ringing) {\n\t\t\tclearInterval(this.state.alarmId);\n\t\t\t// resultHtml.push(<Alarm stopAlarm={e => this.setState({ringing: false})} />)\n\t\t}\n\n\t\treturn resultHtml;\n\t}\n\n\tgetColorfromString(str) {\n\t\tlet sum = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tsum += str.charCodeAt(i) * Math.pow(10, i);\n\t\t}\n\t\tlet r = sum % 255;\n\t\tlet g = sum / 1000 % 255;\n\t\tlet b = sum / 1000000 % 255;\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t}\n\toppGetColorfromString(str) {\n\t\tlet rgb = this.getColorfromString(str);\n\t\tlet colors = rgb.split(\"(\")[1].split(\")\")[0].split(\",\");\n\t\t// console.log(rgb.split(\"(\")[1].split(\")\")[0]);\n\t\tlet R = Math.abs(255 - parseFloat(colors[0]));\n\t\tlet G = Math.abs(255 - parseFloat(colors[1]));\n\t\tlet B = Math.abs(255 - parseFloat(colors[2]));\n\t\treturn \"rgb(\" + R + \",\" + G + \",\" + B + \")\";\n\t}\n\n\n\n\n\t// alarm check time\n\tcheckForAlarm = () => {\n\t\tif (this.props.active && this.props.alarmOn) {\n\t\t\tlet d = new Date();\n\t\t\tif (d.getHours() === this.state.hour || d.getMinutes() === this.state.minute) {\n\t\t\t\t// console.log(\"timer!!!!!!!!!\");\n\t\t\t\tthis.setState({\n\t\t\t\t\tringing: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// setup alarm \n\t\t// console.log(\"Mounted\");\n\t\t// let intervalNum = setInterval(this.checkForAlarm, 1000);\n\t\tlet targetHour = parseInt(this.props.task[1].split(\":\")[0]);\n\t\tlet targetMinute = parseInt(this.props.task[1].split(\":\")[1]);\n\t\tthis.setState({\n\t\t\thour: targetHour,\n\t\t\tminute: targetMinute\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Task\" \n\t\t\t\tstyle={{backgroundColor: this.getColorfromString(this.props.task[0]),\n\t\t\t\t\tcolor: this.oppGetColorfromString(this.props.task[0].split().reverse().join())}}>\n\t\t\t\t{this.constructTask()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Task;\n","import React, {Component} from 'react';\nimport Task from \"./Task\";\n\n\n// props:\n//\tactive : bool\n//\ttasks\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\n\nclass Hour extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tclass: \"\"\n\t\t}\n\t}\n\n\n\tconstructHours() {\n\t\t// make a list of Task obj\n\t\tlet Tasks = [];\n\t\tlet times = [];\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\n\t\t\tlet task = this.props.tasks[i];\n\t\t\tlet timeArr = task[1].split(\"-\")[0].trim().split(\":\");\n\t\t\t// console.log(timeArr);\n\t\t\tlet time = parseInt(timeArr[0]) * 60 + parseInt(timeArr[1]);\n\t\t\ttimes.push(time);\n\t\t}\n\t\t\n\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\n\t\t\tlet minIndex = this.getMinIndex(times);\n\n\t\t\tlet task = this.props.tasks[minIndex];\n\t\t\tTasks.push(\n\t\t\t\t\t<Task key={i} task={task} active={this.props.active} alarmOn={this.props.alarmOn}/>\n\t\t\t\t);\n\t\t\ttimes[minIndex] = 24 * 60;\n\t\t}\n\t\t// console.log(this.props.tasks);\n\t\treturn Tasks;\n\t}\n\tgetMinIndex(arr) {\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tif (arr[result] > arr[i]) {\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetClassName() {\n\t\tif (this.props.active) {\n\t\t\treturn \"active\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"Hour \" + this.getClassName()}>\n\t\t\t\t{this.constructHours()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Hour;\n","import React, {Component} from 'react';\nimport Hour from \"./Hour\";\n\n// props:\n//\ttasks: []\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\n\nclass Day extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactive: [],\n\t\t\thourTasks: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.updateHours();\n\t\tlet boolTable = [];\n\t\tfor (let i = 0; i < 24; i++) {\n\t\t\tboolTable[i] = false;\n\t\t}\n\t\tthis.setState({active: boolTable});\n\t\tthis.updateHours();\n\t\tsetInterval(this.updateHours, 5000);\n\t\t// this.distributeHourlyTask();\n\t}\n\n\t/*\n\tdistributeHourlyTask() {\n\t\t// \"CSE 473 A\", \"2:30-3:20\", \"Ed -> https://us.edstem.org/\"\n\t\t// 13 hours!\n\t\t// 7 ==>> 0\n\t\tlet newHourTasks = [];\n\t\tfor (let i = 0; i < 13; i++) {\n\t\t\tnewHourTasks.push([]);\n\t\t}\n\t\tfor (let task of this.props.tasks) {\n\t\t\tlet startHour = task[1].split(\"-\")[0].split(\":\")[0] - 7;\n\t\t\tnewHourTasks[startHour].push(task);\n\t\t\t// console.log(task);\n\t\t\t// hourTasks[startHour].push(task); // debug\n\t\t}\n\n\t\tthis.setState({hourTasks: newHourTasks});\n\t\tconsole.log(this.hourTasks);\n\t}\n\t*/\n\n\n\tupdateHours = () => {\n\t\t// only update if is active\n\t\tif (this.props.active) {\n\t\t\t// console.log(\"updating\");\n\t\t\tlet boolTable = [];\n\t\t\tfor (let i = 0; i < 24; i++) {\n\t\t\t\tboolTable[i] = false;\n\t\t\t}\n\t\t\tlet hour = new Date().getHours();\n\t\t\tboolTable[hour] = true;\n\t\t\tthis.setState({active: boolTable});\n\t\t}\n\t}\n\n\n\tconstructHours() {\n\t\tif (this.state.active.length === 0) {\n\t\t\treturn; // not ready\n\t\t}\n\n\t\t// generate an array of tasks for each hour\n\t\tlet newHourTasks = [];\n\t\tfor (let i = 0; i < 13; i++) {\n\t\t\tnewHourTasks.push([]);\n\t\t}\n\t\tfor (let task of this.props.tasks) {\n\t\t\ttry {\n\t\t\t\tlet startHour = task[1].split(\"-\")[0].split(\":\")[0] - 9;\n\t\t\t\tnewHourTasks[startHour].push(task);\n\t\t\t} catch (e) {\n\t\t\t\t// just skip this\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t\t// hourTasks[startHour].push(task); // debug\n\t\t}\n\n\t\tlet tags = [];\t\t\n\t\ttags.push(<div key={0} className=\"d_title\"><div>{this.props.title}</div></div>);\n\t\tfor (let i = 9; i < 21; i++) {\n\t\t\ttags.push(\n\t\t\t\t<Hour key={i} active={this.state.active[i]} hour={i} tasks={newHourTasks[i-9]}/>\n\t\t\t);\n\t\t}\n\t\treturn tags;\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Day\">\n\t\t\t\t{this.constructHours()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Day;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Day from \"./Day\";\n// import text from \"./schedule.txt\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTasks: [],\n      active: [],\n      title: \"\",\n      taskList: []\n    };\n  }\n\n\n  componentDidMount() {\n    let vars = this.getUrlVars();\n\n    // parse parameter: page=?\n    // for text file name to process\n    if (!vars[\"page\"]) {\n      vars[\"page\"] = \"template\";\n    }\n    \n    this.UpdateDay();\n    setInterval(this.UpdateDay,1000000);\n\n    fetch(\"../schedules/\"+vars[\"page\"]+\".txt\")\n    .then(response => response.text())\n    .then(text => this.parseTextFileAndUpdate(text))\n    .catch(err => {\n      console.log(\"Cannot find \" + vars[\"page\"] + \" in schedules folder: \");\n      console.log(err);\n      this.parseTextFileAndUpdate(\"Cannot find schedule\");\n    })\n  }\n\n  parseTextFileAndUpdate = (text) => {\n    // default page when dev, skip that\n    if (text.includes(\"<!DOCTYPE html>\")) {\n      console.log(\"Cannot find schedule\");\n      this.parseTextFileAndUpdate(\"Cannot find schedule\");\n      return;\n    }\n    if (!text) {\n      console.log(\"Got an empty file\");\n      return;\n    }\n    let arr = text.split(\"\\n\");\n    if (arr.length === 0 || arr[0] === \"\") {\n      console.log(\"First line (title) is empty\");\n      arr[0] = \"Empty Title\";\n    }\n    let result = [];\n    for (let x = 1; x < arr.length; x++) {\n      let trimedStr = arr[x].trim();\n      if (trimedStr.includes(\"#\")) {\n        continue;\n      }\n      if (trimedStr !== \"\") {\n        result.push(arr[x].trim());\n      }\n    }\n\n    // update with info\n    this.setState({\n      title: arr[0],\n      taskList: result\n    }, () => {\n      this.updateTasks();\n    });\n  }\n\n  getUrlVars() {\n    let vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, (m,key,value) => {\n        vars[key] = value;\n    });\n    // console.log(vars);\n    return vars;\n  }\n\n\n  // generate and set allTasks from the taskList\n  updateTasks = () => {\n    let dayName2Int = new Map();\n    dayName2Int.set(\"Mon\", 0);\n    dayName2Int.set(\"Tue\", 1);\n    dayName2Int.set(\"Wed\", 2);\n    dayName2Int.set(\"Thu\", 3);\n    dayName2Int.set(\"Fri\", 4);\n    dayName2Int.set(\"Sat\", 5);\n    dayName2Int.set(\"Sun\", 6);\n\n    // clauses [1][2][3]...\n    // each day should have an array of tasks\n    let daysArray = [];\n    for (let i = 0; i < 7; i++) {\n      daysArray.push([]);\n    }\n    for (let line of this.state.taskList) { // one line \n      let taskDetail = [];\n      line.split(\"|\").forEach(item => {\n        item = item.trim();\n        if (item !== \"\") {\n          taskDetail.push(item);\n        }\n      });\n      if (taskDetail.length < 2) {\n        continue;\n      }\n      // process this particular task with clauses\n      let times = taskDetail[1].split(\",\");\n      for (let time of times) {\n        // timeDetail: \"Wed\" \"Sat\" \"10:10-12:10\"\n        //  - [day day ...] [time]\n        let timeDetail = time.trim().split(\" \");\n        if (timeDetail.length <= 1) {\n          // possibly malformed, skip\n          console.log(\"skipping time of day\", time, taskDetail);\n          continue;\n        }\n        let timeOfDay = timeDetail[timeDetail.length - 1];\n        timeDetail.splice(timeDetail.length-1, 1);\n        for (let dayName of timeDetail) {\n          // console.log(dayName);\n          if (!dayName2Int.has(dayName)) continue;\n          let dayTask = [];\n          // title\n          dayTask.push(taskDetail[0]);\n          // hours\n          dayTask.push(timeOfDay);\n          // comments\n          for (let i = 2; i < taskDetail.length; i++) {\n            dayTask.push(taskDetail[i]);\n          }\n          // add to Day object\n          daysArray[dayName2Int.get(dayName)].push(dayTask);\n        }\n      } \n    }\n    this.setState({allTasks: daysArray});\n  }\n\n  // figure out what day it is\n  UpdateDay = () => {\n    let boolTable = [];\n    let day = (new Date().getDay() + 6) % 7;\n    for (let i = 0; i < 7; i++) {\n      if (i === day) {\n        boolTable[i] = true;\n      } else {\n        boolTable[i] = false;\n      }\n    }\n    this.setState({active: boolTable});\n  }\n\n\n  constructDays() {\n    // not ready yet\n    if (this.state.allTasks.length === 0) {\n      return;\n    }\n\n    return <div>\n      <div id=\"title\">{this.state.title}</div>\n      <div id=\"timeAxis\">\n        <div>9am</div>\n        <div>10am</div>\n        <div>11am</div>\n        <div>12pm</div>\n        <div>1pm</div>\n        <div>2pm</div>\n        <div>3pm</div>\n        <div>4pm</div>\n        <div>5pm</div>\n        <div>6pm</div>\n        <div>7pm</div>\n        <div>8pm</div>\n      </div>\n      <Day title=\"Monday\"     tasks={this.state.allTasks[0]} active={this.state.active[0]} />\n      <Day title=\"Tuesday\"    tasks={this.state.allTasks[1]} active={this.state.active[1]} />\n      <Day title=\"Wednesday\"  tasks={this.state.allTasks[2]} active={this.state.active[2]} />\n      <Day title=\"Thursday\"   tasks={this.state.allTasks[3]} active={this.state.active[3]} />\n      <Day title=\"Friday\"     tasks={this.state.allTasks[4]} active={this.state.active[4]} />\n      <Day title=\"Saturday\"   tasks={this.state.allTasks[5]} active={this.state.active[5]} />\n      <Day title=\"Sunday\"     tasks={this.state.allTasks[6]} active={this.state.active[6]} />\n    </div>;\n  }\n\n  render() {\n      return (\n        <div className=\"App\">\n          {this.constructDays()}\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}