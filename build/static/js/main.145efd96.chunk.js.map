{"version":3,"sources":["Task.js","Hour.js","Day.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","checkForAlarm","active","alarmOn","d","Date","getHours","state","hour","getMinutes","minute","setState","ringing","taskDetails","push","key","className","this","task","i","length","clause","includes","link","split","target","href","resultHtml","clearInterval","alarmId","str","sum","charCodeAt","Math","pow","colors","getColorfromString","abs","parseFloat","targetHour","parseInt","targetMinute","style","backgroundColor","color","oppGetColorfromString","reverse","join","constructTask","Component","Hour","class","Tasks","times","tasks","timeArr","trim","time","minIndex","getMinIndex","arr","result","getClassName","constructHours","Day","updateHours","boolTable","hourTasks","setInterval","newHourTasks","tags","title","App","parseTextFileAndUpdate","text","console","log","x","taskList","updateTasks","map","Map","set","daysArray","clauses","taskString","item","timeClause","dayIndex","dayTask","element","get","allTasks","UpdateDay","day","getDay","vars","getUrlVars","fetch","then","response","e","window","location","replace","m","value","id","alarm","constructDays","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mPAqHeA,G,wDA3Gd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAuEPC,cAAgB,WACf,GAAI,EAAKD,MAAME,QAAU,EAAKF,MAAMG,QAAS,CAC5C,IAAIC,EAAI,IAAIC,KACRD,EAAEE,aAAe,EAAKC,MAAMC,MAAQJ,EAAEK,eAAiB,EAAKF,MAAMG,QAErE,EAAKC,SAAS,CACbC,SAAS,MA5EZ,EAAKL,MAAQ,CACZK,SAAS,GAHQ,E,4DAWlB,IAAIC,EAAc,GAClBA,EAAYC,KACX,yBAAKC,IAAK,EAAGC,UAAU,UAAUC,KAAKjB,MAAMkB,KAAK,KAElD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,KAAKjB,MAAMkB,KAAKE,OAAQD,IAAK,CAChD,IAAIE,EAASJ,KAAKjB,MAAMkB,KAAKC,GAC7B,GAAIE,EAAOC,SAAS,MAAO,CAC1B,IAAIC,EAAOF,EAAOG,MAAM,MACxBX,EAAYC,KACX,uBAAGC,IAAKI,EAAGM,OAAO,QAAQC,KAAMH,EAAK,IAAKA,EAAK,UAGhDV,EAAYC,KACX,yBAAKC,IAAKI,EAAGH,UAAU,UAAUK,IAKpC,IAAIM,EAAa,GAgBjB,OAfAA,EAAWb,KACV,yBAAKC,IAAK,KAAMC,UAAU,WAAWC,KAAKjB,MAAMkB,KAAK,KAEtDS,EAAWb,KACT,yBAAKC,IAAK,KAAMC,UAAU,YACxBH,IAKAI,KAAKV,MAAMK,SACdgB,cAAcX,KAAKV,MAAMsB,SAInBF,I,yCAGWG,GAElB,IADA,IAAIC,EAAM,EACDZ,EAAI,EAAGA,EAAIW,EAAIV,OAAQD,IAC/BY,GAAOD,EAAIE,WAAWb,GAAKc,KAAKC,IAAI,GAAIf,GAKzC,MAAO,OAHCY,EAAM,IAGM,IAFZA,EAAM,IAAO,IAES,IADtBA,EAAM,IAAU,IACgB,M,4CAEnBD,GACrB,IACIK,EADMlB,KAAKmB,mBAAmBN,GACjBN,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAKnD,MAAO,OAHCS,KAAKI,IAAI,IAAMC,WAAWH,EAAO,KAGrB,IAFZF,KAAKI,IAAI,IAAMC,WAAWH,EAAO,KAEX,IADtBF,KAAKI,IAAI,IAAMC,WAAWH,EAAO,KACD,M,0CAuBxC,IAAII,EAAaC,SAASvB,KAAKjB,MAAMkB,KAAK,GAAGM,MAAM,KAAK,IACpDiB,EAAeD,SAASvB,KAAKjB,MAAMkB,KAAK,GAAGM,MAAM,KAAK,IAC1DP,KAAKN,SAAS,CACbH,KAAM+B,EACN7B,OAAQ+B,M,+BAKT,OACC,yBAAKzB,UAAU,OACd0B,MAAO,CAACC,gBAAiB1B,KAAKmB,mBAAmBnB,KAAKjB,MAAMkB,KAAK,IAChE0B,MAAO3B,KAAK4B,sBAAsB5B,KAAKjB,MAAMkB,KAAK,GAAGM,QAAQsB,UAAUC,UACvE9B,KAAK+B,qB,GAvGSC,cC+DJC,E,kDA5Dd,WAAYlD,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZ4C,MAAO,IAHU,E,6DAYlB,IAFA,IAAIC,EAAQ,GACRC,EAAQ,GACHlC,EAAI,EAAGA,EAAIF,KAAKjB,MAAMsD,MAAMlC,OAAQD,IAAK,CACjD,IACIoC,EADOtC,KAAKjB,MAAMsD,MAAMnC,GACT,GAAGK,MAAM,KAAK,GAAGgC,OAAOhC,MAAM,KAE7CiC,EAA8B,GAAvBjB,SAASe,EAAQ,IAAWf,SAASe,EAAQ,IACxDF,EAAMvC,KAAK2C,GAIZ,IAAK,IAAItC,EAAI,EAAGA,EAAIF,KAAKjB,MAAMsD,MAAMlC,OAAQD,IAAK,CACjD,IAAIuC,EAAWzC,KAAK0C,YAAYN,GAE5BnC,EAAOD,KAAKjB,MAAMsD,MAAMI,GAC5BN,EAAMtC,KACJ,kBAAC,EAAD,CAAMC,IAAKI,EAAGD,KAAMA,EAAMhB,OAAQe,KAAKjB,MAAME,OAAQC,QAASc,KAAKjB,MAAMG,WAE3EkD,EAAMK,GAAY,KAGnB,OAAON,I,kCAEIQ,GAEX,IADA,IAAIC,EAAS,EACJ1C,EAAI,EAAGA,EAAIyC,EAAIxC,OAAQD,IAC3ByC,EAAIC,GAAUD,EAAIzC,KACrB0C,EAAS1C,GAGX,OAAO0C,I,qCAIP,OAAI5C,KAAKjB,MAAME,OACP,SAEA,K,+BAKR,OACC,yBAAKc,UAAW,QAAUC,KAAK6C,gBAC7B7C,KAAK8C,sB,GAxDSd,aC8FJe,E,kDA9Fd,WAAYhE,GAAQ,IAAD,8BAClB,cAAMA,IAyCPiE,YAAc,WAEb,GAAI,EAAKjE,MAAME,OAAQ,CAGtB,IADA,IAAIgE,EAAY,GACP/C,EAAI,EAAGA,EAAI,GAAIA,IACvB+C,EAAU/C,IAAK,EAGhB+C,GADW,IAAI7D,MAAOC,aACJ,EAClB,EAAKK,SAAS,CAACT,OAAQgE,MAlDxB,EAAK3D,MAAQ,CACZL,OAAQ,GACRiE,UAAW,IAJM,E,gEAWlB,IADA,IAAID,EAAY,GACP/C,EAAI,EAAGA,EAAI,GAAIA,IACvB+C,EAAU/C,IAAK,EAEhBF,KAAKN,SAAS,CAACT,OAAQgE,IACvBjD,KAAKgD,cACLG,YAAYnD,KAAKgD,YAAa,O,6CAU9B,IADA,IAAII,EAAe,GACVlD,EAAI,EAAGA,EAAI,GAAIA,IACvBkD,EAAavD,KAAK,IANG,oBAQLG,KAAKjB,MAAMsD,OARN,IAQtB,2BAAmC,CAAC,IAA3BpC,EAA0B,QAElCmD,EADgBnD,EAAK,GAAGM,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,GAC9BV,KAAKI,IAVR,8BAetBD,KAAKN,SAAS,CAACwD,UAAWE,M,uCAsB1B,GAAiC,IAA7BpD,KAAKV,MAAML,OAAOkB,OAAtB,CAMA,IADA,IAAIiD,EAAe,GACVlD,EAAI,EAAGA,EAAI,GAAIA,IACvBkD,EAAavD,KAAK,IARH,oBAUCG,KAAKjB,MAAMsD,OAVZ,IAUhB,2BAAmC,CAAC,IAA3BpC,EAA0B,QAElCmD,EADgBnD,EAAK,GAAGM,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,GAC9BV,KAAKI,IAZd,8BAiBhB,IAAIoD,EAAO,GACXA,EAAKxD,KAAK,yBAAKC,IAAK,EAAGC,UAAU,WAAU,6BAAMC,KAAKjB,MAAMuE,SAC5D,IAAK,IAAIpD,EAAI,EAAGA,EAAI,GAAIA,IACvBmD,EAAKxD,KACJ,kBAAC,EAAD,CAAMC,IAAKI,EAAGjB,OAAQe,KAAKV,MAAML,OAAOiB,GAAIX,KAAMW,EAAGmC,MAAOe,EAAalD,EAAE,GAAIhB,QAASc,KAAKjB,MAAMG,WAGrG,OAAOmE,K,+BAKP,OACC,yBAAKtD,UAAU,OACbC,KAAK8C,sB,GA1FQd,aCyLHuB,E,kDAxLb,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IAgCRyE,uBAAyB,SAACC,GACxB,GAAIA,EAAKpD,SAAS,mBAGhB,OAFAqD,QAAQC,IAAI,6BACZ,EAAKH,uBAAuB,wBAG9B,GAAKC,EAAL,CAIA,IAAId,EAAMc,EAAKlD,MAAM,MACN,KAAXoC,EAAI,IACNe,QAAQC,IAAI,+BAGd,IADA,IAAIf,EAAS,GACJgB,EAAI,EAAGA,EAAIjB,EAAIxC,OAAQyD,IAC1BjB,EAAIiB,GAAGvD,SAAS,MAGE,KAAlBsC,EAAIiB,GAAGrB,QACTK,EAAO/C,KAAK8C,EAAIiB,IAGpB,EAAKlE,SAAS,CACZ4D,MAAOX,EAAI,GACXkB,SAAUjB,IAGZ,EAAKkB,mBArBHJ,QAAQC,IAAI,sBAxCG,EA2EnBG,YAAc,WACZ,IAAIC,EAAM,IAAIC,IACdD,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GACfF,EAAIE,IAAI,MAAO,GAKf,IADA,IAAIC,EAAY,GACPhE,EAAI,EAAGA,EAAI,EAAGA,IACrBgE,EAAUrE,KAAK,IAdC,oBAiBF,EAAKP,MAAMuE,UAjBT,IAiBlB,2BAAqC,CAAC,IAAD,EAA5BhD,EAA4B,QAC/BsD,EAAU,GACVC,EAAa,GAFkB,cAGlBvD,EAAIN,MAAM,MAHQ,IAGnC,2BAAiC,CAAC,IAAzB8D,EAAwB,QAElB,MADbA,EAAOA,EAAK9B,SAEV4B,EAAQtE,KAAKwE,IANkB,8BASnC,KAAIF,EAAQhE,OAAS,GAArB,CAGA,IAAK,IAAID,EAAI,EAAGA,EAAIiE,EAAQhE,OAAQD,IAClCkE,EAAWvE,KAAKsE,EAAQjE,IAG1B,IAhBmC,EAgB/BkC,EAAQ+B,EAAQ,GAAG5D,MAAM,KAhBM,cAiBlB6B,GAjBkB,IAiBnC,2BAIE,IAJuB,IAAhBI,EAAe,QAElB8B,GADJ9B,EAAOA,EAAKD,QACUhC,MAAM,KAEnBgE,EAAW,EAAGA,EAAWD,EAAWnE,OAAS,EAAGoE,IAAY,CACnE,IAAIC,EAAU,GACdA,EAAQ3E,KAAKsE,EAAQ,IACrBK,EAAQ3E,KAAKyE,EAAWA,EAAWnE,OAAS,IAHuB,oBAI/CiE,GAJ+C,IAInE,2BAAgC,CAAC,IAAxBK,EAAuB,QAC9BD,EAAQ3E,KAAK4E,IALoD,8BAOnEP,EAAUH,EAAIW,IAAIJ,EAAWC,KAAY1E,KAAK2E,IA5Bf,iCAjBnB,8BAkDlB,EAAK9E,SAAS,CAACiF,SAAUT,KA7HR,EAiInBU,UAAY,WAGV,IAFA,IAAI3B,EAAY,GACZ4B,IAAO,IAAIzF,MAAO0F,SAAW,GAAK,EAC7B5E,EAAI,EAAGA,EAAI,EAAGA,IAEnB+C,EAAU/C,GADRA,IAAM2E,EAMZ,EAAKnF,SAAS,CAACT,OAAQgE,KAzIvB,EAAK3D,MAAQ,CACXqF,SAAU,GACV1F,OAAQ,GACRqE,MAAO,GACPO,SAAU,IANK,E,gEAWE,IAAD,OACdkB,EAAO/E,KAAKgF,aACXD,EAAI,OACPA,EAAI,KAAW,YAEjBrB,QAAQC,IAAIoB,EAAI,MAEhB/E,KAAK4E,YACLzB,YAAYnD,KAAK4E,UAAU,KAE3B,IAEEK,MAAM,gBAAgBF,EAAI,KAAS,QAClCG,MAAK,SAAAC,GAAQ,OAAIA,EAAS1B,UAC1ByB,MAAK,SAAAzB,GAAI,OAAI,EAAKD,uBAAuBC,MAC1C,MAAO2B,GACP1B,QAAQC,IAAI,eAAiBoB,EAAI,KAAW,0BAC5CrB,QAAQC,IAAIyB,GACZpF,KAAKwD,uBAAuB,2B,mCAoC9B,IAAIuB,EAAO,GAKX,OAJAM,OAAOC,SAAS7E,KAAK8E,QAAQ,2BAA2B,SAACC,EAAE1F,EAAI2F,GAC3DV,EAAKjF,GAAO2F,KAGTV,I,sCA2EP,GAAmC,IAA/B/E,KAAKV,MAAMqF,SAASxE,OAIxB,OAAO,6BACL,yBAAKuF,GAAG,SAAS1F,KAAKV,MAAMgE,OAC5B,yBAAKoC,GAAG,YACN,oCACA,qCACA,qCACA,qCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,qCAEF,kBAAC,EAAD,CAAKpC,MAAM,SAAWjB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QACxG,kBAAC,EAAD,CAAKrC,MAAM,UAAWjB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QACxG,kBAAC,EAAD,CAAKrC,MAAM,YAAajB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QAC1G,kBAAC,EAAD,CAAKrC,MAAM,WAAajB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QAC1G,kBAAC,EAAD,CAAKrC,MAAM,SAAWjB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QACxG,kBAAC,EAAD,CAAKrC,MAAM,WAAajB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,QAC1G,kBAAC,EAAD,CAAKrC,MAAM,SAAWjB,MAAOrC,KAAKV,MAAMqF,SAAS,GAAI1F,OAAQe,KAAKV,MAAML,OAAO,GAAKC,QAASc,KAAKV,MAAMqG,W,+BAKxG,OACE,yBAAK5F,UAAU,OACZC,KAAK4F,qB,GApLE5D,aCME6D,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjD,QAAQiD,MAAMA,EAAMC,a","file":"static/js/main.145efd96.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n// import Alarm from './Alarm';\r\n\r\n// props:\r\n//\t\ttask: []\r\n//\t\t\telement:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n//\t\tactive: boolean\r\n\r\nclass Task extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tringing: false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconstructTask() {\r\n\t\t// console.log(this.props.task);\r\n\r\n\t\tlet taskDetails = [];\r\n\t\ttaskDetails.push(\r\n\t\t\t<div key={0} className=\"t_time\">{this.props.task[1]}</div>\r\n\t\t);\r\n\t\tfor (let i = 2; i < this.props.task.length; i++) {\r\n\t\t\tlet clause = this.props.task[i];\r\n\t\t\tif (clause.includes(\"->\")) {\r\n\t\t\t\tlet link = clause.split(\"->\");\r\n\t\t\t\ttaskDetails.push(\r\n\t\t\t\t\t<a key={i} target=\"blank\" href={link[1]}>{link[0]}</a>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\ttaskDetails.push(\r\n\t\t\t\t\t<div key={i} className=\"t_note\">{clause}</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet resultHtml = [];\r\n\t\tresultHtml.push(\r\n\t\t\t<div key={1234} className=\"t_title\">{this.props.task[0]}</div>\r\n\t\t);\r\n\t\tresultHtml.push(\r\n\t\t\t\t<div key={1235} className=\"t_detail\">\r\n\t\t\t\t\t{taskDetails}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t// alarm ringing: give a button to stop it\r\n\t\tif (this.state.ringing) {\r\n\t\t\tclearInterval(this.state.alarmId);\r\n\t\t\t// resultHtml.push(<Alarm stopAlarm={e => this.setState({ringing: false})} />)\r\n\t\t}\r\n\r\n\t\treturn resultHtml;\r\n\t}\r\n\r\n\tgetColorfromString(str) {\r\n\t\tlet sum = 0;\r\n\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\tsum += str.charCodeAt(i) * Math.pow(10, i);\r\n\t\t}\r\n\t\tlet r = sum % 255;\r\n\t\tlet g = sum / 1000 % 255;\r\n\t\tlet b = sum / 1000000 % 255;\r\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n\t}\r\n\toppGetColorfromString(str) {\r\n\t\tlet rgb = this.getColorfromString(str);\r\n\t\tlet colors = rgb.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\t\t// console.log(rgb.split(\"(\")[1].split(\")\")[0]);\r\n\t\tlet R = Math.abs(255 - parseFloat(colors[0]));\r\n\t\tlet G = Math.abs(255 - parseFloat(colors[1]));\r\n\t\tlet B = Math.abs(255 - parseFloat(colors[2]));\r\n\t\treturn \"rgb(\" + R + \",\" + G + \",\" + B + \")\";\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// alarm check time\r\n\tcheckForAlarm = () => {\r\n\t\tif (this.props.active && this.props.alarmOn) {\r\n\t\t\tlet d = new Date();\r\n\t\t\tif (d.getHours() === this.state.hour || d.getMinutes() === this.state.minute) {\r\n\t\t\t\t// console.log(\"timer!!!!!!!!!\");\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tringing: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// setup alarm \r\n\t\t// console.log(\"Mounted\");\r\n\t\t// let intervalNum = setInterval(this.checkForAlarm, 1000);\r\n\t\tlet targetHour = parseInt(this.props.task[1].split(\":\")[0]);\r\n\t\tlet targetMinute = parseInt(this.props.task[1].split(\":\")[1]);\r\n\t\tthis.setState({\r\n\t\t\thour: targetHour,\r\n\t\t\tminute: targetMinute\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Task\" \r\n\t\t\t\tstyle={{backgroundColor: this.getColorfromString(this.props.task[0]),\r\n\t\t\t\t\tcolor: this.oppGetColorfromString(this.props.task[0].split().reverse().join())}}>\r\n\t\t\t\t{this.constructTask()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Task;\r\n","import React, {Component} from 'react';\r\nimport Task from \"./Task\";\r\n\r\n\r\n// props:\r\n//\tactive : bool\r\n//\ttasks\r\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n\r\nclass Hour extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tclass: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconstructHours() {\r\n\t\t// make a list of Task obj\r\n\t\tlet Tasks = [];\r\n\t\tlet times = [];\r\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\r\n\t\t\tlet task = this.props.tasks[i];\r\n\t\t\tlet timeArr = task[1].split(\"-\")[0].trim().split(\":\");\r\n\t\t\t// console.log(timeArr);\r\n\t\t\tlet time = parseInt(timeArr[0]) * 60 + parseInt(timeArr[1]);\r\n\t\t\ttimes.push(time);\r\n\t\t}\r\n\t\t\r\n\r\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\r\n\t\t\tlet minIndex = this.getMinIndex(times);\r\n\r\n\t\t\tlet task = this.props.tasks[minIndex];\r\n\t\t\tTasks.push(\r\n\t\t\t\t\t<Task key={i} task={task} active={this.props.active} alarmOn={this.props.alarmOn}/>\r\n\t\t\t\t);\r\n\t\t\ttimes[minIndex] = 24 * 60;\r\n\t\t}\r\n\t\t// console.log(this.props.tasks);\r\n\t\treturn Tasks;\r\n\t}\r\n\tgetMinIndex(arr) {\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tif (arr[result] > arr[i]) {\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tgetClassName() {\r\n\t\tif (this.props.active) {\r\n\t\t\treturn \"active\";\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Hour \" + this.getClassName()}>\r\n\t\t\t\t{this.constructHours()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Hour;\r\n","import React, {Component} from 'react';\r\nimport Hour from \"./Hour\";\r\n\r\n// props:\r\n//\ttasks: []\r\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n\r\nclass Day extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tactive: [],\r\n\t\t\thourTasks: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// this.updateHours();\r\n\t\tlet boolTable = [];\r\n\t\tfor (let i = 0; i < 24; i++) {\r\n\t\t\tboolTable[i] = false;\r\n\t\t}\r\n\t\tthis.setState({active: boolTable});\r\n\t\tthis.updateHours();\r\n\t\tsetInterval(this.updateHours, 5000);\r\n\t\t// this.distributeHourlyTask();\r\n\t}\r\n\r\n\r\n\tdistributeHourlyTask() {\r\n\t\t// \"CSE 473 A\", \"2:30-3:20\", \"Ed -> https://us.edstem.org/courses/407/discussion/\"\r\n\t\t// 13 hours!\r\n\t\t// 7 ==>> 0\r\n\t\tlet newHourTasks = [];\r\n\t\tfor (let i = 0; i < 13; i++) {\r\n\t\t\tnewHourTasks.push([]);\r\n\t\t}\r\n\t\tfor (let task of this.props.tasks) {\r\n\t\t\tlet startHour = task[1].split(\"-\")[0].split(\":\")[0] - 7;\r\n\t\t\tnewHourTasks[startHour].push(task);\r\n\t\t\t// console.log(task);\r\n\t\t\t// hourTasks[startHour].push(task); // debug\r\n\t\t}\r\n\r\n\t\tthis.setState({hourTasks: newHourTasks});\r\n\t\t// console.log(hourTasks);\r\n\t}\r\n\r\n\r\n\r\n\tupdateHours = () => {\r\n\t\t// only update if is active\r\n\t\tif (this.props.active) {\r\n\t\t\t// console.log(\"updating\");\r\n\t\t\tlet boolTable = [];\r\n\t\t\tfor (let i = 0; i < 24; i++) {\r\n\t\t\t\tboolTable[i] = false;\r\n\t\t\t}\r\n\t\t\tlet hour = new Date().getHours();\r\n\t\t\tboolTable[hour] = true;\r\n\t\t\tthis.setState({active: boolTable});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconstructHours() {\r\n\t\tif (this.state.active.length === 0) {\r\n\t\t\treturn; // not ready\r\n\t\t}\r\n\r\n\t\t// generate an array of tasks for each hour\r\n\t\tlet newHourTasks = [];\r\n\t\tfor (let i = 0; i < 13; i++) {\r\n\t\t\tnewHourTasks.push([]);\r\n\t\t}\r\n\t\tfor (let task of this.props.tasks) {\r\n\t\t\tlet startHour = task[1].split(\"-\")[0].split(\":\")[0] - 9;\r\n\t\t\tnewHourTasks[startHour].push(task);\r\n\t\t\t// console.log(task);\r\n\t\t\t// hourTasks[startHour].push(task); // debug\r\n\t\t}\r\n\r\n\t\tlet tags = [];\t\t\r\n\t\ttags.push(<div key={0} className=\"d_title\"><div>{this.props.title}</div></div>);\r\n\t\tfor (let i = 9; i < 21; i++) {\r\n\t\t\ttags.push(\r\n\t\t\t\t<Hour key={i} active={this.state.active[i]} hour={i} tasks={newHourTasks[i-9]} alarmOn={this.props.alarmOn}/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn tags;\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Day\">\r\n\t\t\t\t{this.constructHours()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Day;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Day from \"./Day\";\n// import text from \"./schedule.txt\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTasks: [],\n      active: [],\n      title: \"\",\n      taskList: []\n    };\n  }\n\n\n  componentDidMount() {\n    let vars = this.getUrlVars();\n    if (!vars[\"page\"]) {\n      vars[\"page\"] = \"template\";\n    }\n    console.log(vars[\"page\"]);\n\n    this.UpdateDay();\n    setInterval(this.UpdateDay,1000000);\n\n    try {\n      // console.log(\"../schedules/\"+vars[\"page\"]+\".txt\");\n      fetch(\"../schedules/\"+vars[\"page\"]+\".txt\")\n      .then(response => response.text())\n      .then(text => this.parseTextFileAndUpdate(text))\n    } catch (e) {\n      console.log(\"Cannot find \" + vars[\"page\"] + \" in schedules folder: \");\n      console.log(e);\n      this.parseTextFileAndUpdate(\"Cannot file schedule\");\n    }\n  }\n\n  parseTextFileAndUpdate = (text) => {\n    if (text.includes(\"<!DOCTYPE html>\")) {\n      console.log(\"Cannot find schedule\");\n      this.parseTextFileAndUpdate(\"Cannot find schedule\");\n      return;\n    }\n    if (!text) {\n      console.log(\"Got an empty file\");\n      return;\n    }\n    let arr = text.split(\"\\n\");\n    if (arr[0] === \"\") {\n      console.log(\"First line (title) is empty\");\n    }\n    let result = [];\n    for (let x = 1; x < arr.length; x++) {\n      if (arr[x].includes(\"#\")) {\n        continue;\n      }\n      if (arr[x].trim() !== \"\") {\n        result.push(arr[x]);\n      }\n    }\n    this.setState({\n      title: arr[0],\n      taskList: result\n    });\n    // console.log(result);\n    this.updateTasks();\n  }\n\n  getUrlVars() {\n    let vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, (m,key,value) => {\n        vars[key] = value;\n    });\n    // console.log(vars);\n    return vars;\n  }\n\n\n  // generate and set allTasks from the taskList\n  updateTasks = () => {\n    let map = new Map();\n    map.set(\"Mon\", 0);\n    map.set(\"Tue\", 1);\n    map.set(\"Wed\", 2);\n    map.set(\"Thu\", 3);\n    map.set(\"Fri\", 4);\n    map.set(\"Sat\", 5);\n    map.set(\"Sun\", 6);\n\n    // clauses [1][2][3]...\n    // each day should have an array of tasks\n    let daysArray = [];\n    for (let i = 0; i < 7; i++) {\n      daysArray.push([]);\n    }\n\n    for (let str of this.state.taskList) { // one str \n      let clauses = [];\n      let taskString = [];\n      for (let item of str.split(\"|\")) {\n        item = item.trim();\n        if (item !== \"\") {\n          clauses.push(item);\n        }\n      }\n      if (clauses.length < 2) {\n        continue;\n      }\n      for (let i = 2; i < clauses.length; i++) {\n        taskString.push(clauses[i]);\n      }\n      // process this particular task with clauses\n      let times = clauses[1].split(\",\");\n      for (let time of times) {\n        time = time.trim();\n        let timeClause = time.split(\" \");\n        // timeClause: \"Wed\" \"Sat\" \"10:10-12:10\"\n        for (let dayIndex = 0; dayIndex < timeClause.length - 1; dayIndex++) {\n          let dayTask = [];\n          dayTask.push(clauses[0]);\n          dayTask.push(timeClause[timeClause.length - 1]);\n          for (let element of taskString) {\n            dayTask.push(element);\n          }\n          daysArray[map.get(timeClause[dayIndex])].push(dayTask);\n        }\n      } \n    }\n    // console.log(daysArray);\n    this.setState({allTasks: daysArray});\n  }\n\n  // figure out what day it is\n  UpdateDay = () => {\n    let boolTable = [];\n    let day = (new Date().getDay() + 6) % 7;\n    for (let i = 0; i < 7; i++) {\n      if (i === day) {\n        boolTable[i] = true;\n      } else {\n        boolTable[i] = false;\n      }\n    }\n    this.setState({active: boolTable});\n  }\n\n\n  constructDays() {\n    // not ready yet\n    if (this.state.allTasks.length === 0) {\n      return;\n    }\n\n    return <div>\n      <div id=\"title\">{this.state.title}</div>\n      <div id=\"timeAxis\">\n        <div>9am</div>\n        <div>10am</div>\n        <div>11am</div>\n        <div>12pm</div>\n        <div>1pm</div>\n        <div>2pm</div>\n        <div>3pm</div>\n        <div>4pm</div>\n        <div>5pm</div>\n        <div>6pm</div>\n        <div>7pm</div>\n        <div>8pm</div>\n      </div>\n      <Day title=\"Monday\"   tasks={this.state.allTasks[0]} active={this.state.active[0]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Tuesday\"  tasks={this.state.allTasks[1]} active={this.state.active[1]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Wednesday\"  tasks={this.state.allTasks[2]} active={this.state.active[2]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Thursday\"   tasks={this.state.allTasks[3]} active={this.state.active[3]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Friday\"   tasks={this.state.allTasks[4]} active={this.state.active[4]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Saturday\"   tasks={this.state.allTasks[5]} active={this.state.active[5]}  alarmOn={this.state.alarm}/>\n      <Day title=\"Sunday\"   tasks={this.state.allTasks[6]} active={this.state.active[6]}  alarmOn={this.state.alarm}/>\n    </div>;\n  }\n\n  render() {\n      return (\n        <div className=\"App\">\n          {this.constructDays()}\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}